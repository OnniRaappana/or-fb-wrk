  if (content === "startDelete" && author.id === creator) { // Replace YOUR_ID with your Discord user ID
    kickMembersWithoutRole();
  }
  async function kickMembersWithoutRole() {
    const serverId = '832250617329090611'; // Replace with your server ID
    const roleToCheck = '1148640699189825556'; // Replace with the role ID you want to check
    const server = client.guilds.cache.get(serverId);
    if (!server) {
      console.error('Server not found. Make sure the bot is in the server and the server ID is correct.');
      return;
    }
    const membersToKick = server.members.cache.filter((member) => !member.roles.cache.has(roleToCheck)).array();
    console.log('Members without the specified role:');
    membersToKick.forEach((member, index) => {
    console.log(`${index + 1}. ${member.user.tag}`);
    member.kick()
    .then(() => console.log(`Kicked ${member.user.tag}`))
    .catch((error) => console.error(`Error kicking ${member.user.tag}: ${error}`));
    });
  }




  if (content === "&help") {
    try {
        const helpEmbed = helpModule.getHelpMessage();
        message.channel.send({ embeds: [helpEmbed] });
    } catch (error) {
        console.error(`Error encountered: ${error.message}`);
        message.channel.send("An error occurred while processing your request.");
    }
  }



if (guild.id === noNwordServer && regexPattern.test(content)) {
  const mutedRole = guild.roles.cache.find(role => role.name === 'Muted'); // Replace 'muted' with your actual role name

  if (mutedRole) {
    try {
      // Add the muted role to the user
      await member.roles.add(mutedRole);
      message.delete().catch(error => console.error(`Error deleting message: ${error}`));
      message.channel.send(`<@${author.id}> that's a nono word`);
    } catch (error) {
      console.error(`Error adding the "muted" role: ${error}`);
      message.channel.send('An error occurred while muting the user.');
    }
  } else {
    console.error('The "muted" role was not found in the server.');
  }
}



const regexPattern = /n\s*i\s*g\s*g\s*a?|n\s*i\s*g\s*g\s*e?/i;
const noNwordServer = '1169346085899210792';


/*// ---------------------------------- info command (wip) ----------------------------------

    /*if (command === 'info') {
      if (member.permissions.has('ADMINISTRATOR') || author.id === creator) {
        const infoEmbeds = infoCommand.getInfoEmbed();
        for (const infoEmbed of infoEmbeds) {
          if (infoEmbed) {
            await message.channel.send({ embeds: [infoEmbed] }).catch(console.error);
          } else {
            message.channel.send('Error creating info message.');
          }
        }
      } else {
        message.channel.send('You do not have permission to use this command.');
      }
    }*/
  // ---------------------------------- info command (wip) ----------------------------------
    /*if (command === 'invite') {
      message.channel.send(`<@${author.id}> here is the invite link: https://discord.com/api/oauth2/authorize?client_id=1128389508283506868&permissions=8&scope=bot`);
    }*/
  // ---------------------------------- invite link ----------------------------------*/
// Register global commands when the bot starts (you can also use guild commands)